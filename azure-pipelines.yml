# Set variables once
variables:
  apiDirectory: 'UserApi/UserApi'
  sonarCloudPrepareExtraProperties: |
    sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)\Coverage\coverage.opencover.xml
    sonar.coverage.exclusions="**/UserApi/Swagger/**, **/Program.cs, **/Startup.cs, **/Testing.Common/**, **/UserApi.Common/**, **/UserApi.IntegrationTests/**, **/UserApi.UnitTests/**, **/UserApi/Helper/**, **/UserApi/ConfigureServicesExtensions.cs, **/UserApi/Extensions/**"
    sonar.cpd.exclusions="**/Program.cs, **/Startup.cs, **/Testing.Common/**, **/UserApi/Swagger/**"
  coverletCoverageExclusions: '"\"[UserApi.*Tests?]*,[UserApi.API]Startup,[UserApi.Common]*,[Testing.Common]*\""'
  integrationTestsAppSettingsTransform: '
    "AzureAd/ClientId":"$(vh-user-api-appid)",
    "AzureAd/ClientSecret":"$(vh-user-api-key)",
    "AzureAd/TenantId":"$(tenantid)",
    "AzureAd/VhUserApiResourceId":"$(vh-user-api-identifieruris)",
    "DefaultPassword":"$(default-password)",    
    "ReformEmail": "$(reformemail)",
    "Testing/TestClientId":"$(vh-admin-web-appid)",
    "Testing/TestClientSecret":"$(vh-admin-web-key)",
    "Testing/NewGroups/0/GroupId": "$(testing-newgroup-0-groupid)",
    "Testing/NewGroups/0/Displayname": "$(testing-newgroup-0-displayname)",
    "Testing/ExistingUserPrincipal": "$(testing-existinguserprincipal)",
    "Testing/ExistingUserLastname": "$(testing-existinguserlastname)",
    "Testing/ExistingUserId": "$(testing-existinguserid)",
    "Testing/ExistingUserFirstname": "$(testing-existinguserfirstname)",
    "Testing/ExistingUserDisplayname": "$(testing-existinguserdisplayname)",
    "Testing/ExistingGroups/1/GroupId": "$(testing-existinggroups-1-groupid)",
    "Testing/ExistingGroups/1/Displayname": "$(testing-existinggroups-1-displayname)",
    "Testing/ExistingGroups/0/GroupId": "$(testing-existinggroups-0-groupid)",
    "Testing/ExistingGroups/0/Displayname": "$(testing-existinggroups-0-displayname)",
    "Testing/ExistingEmail": "$(testing-existingemail)",
    "Testing/CaseAdmin": "$(testing-caseadmin-username)",
    "Testing/Individual": "$(testing-individual-username)",
    "Testing/Judge": "$(testing-judge-username)",
    "Testing/Representative": "$(testing-representative-username)",
    "Testing/VhOfficer": "$(testing-vhofficer-username)",
    "Testing/VhOfficerCaseAdmin": "$(testing-vhofficercaseadmin-username)"
    '
  dalWorkingDirectory: ''
  keyVaultName: vhcoreinfrahtdev # Used to get secrets for integration tests
  secretsFilter: 'vh-user-api-appid,vh-user-api-key,vh-admin-web-appid,vh-admin-web-key,tenantid,vh-user-api-identifieruris' # filters out secrets returned from key vault

# GitHub Repo that conatins build templates. Reference https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=vsts#using-other-repositories
resources:
  repositories:
  - repository: azureDevOpsTemplates
    type: github
    name: hmcts/azure-devops-templates
    ref: refs/heads/master # ref name to use, defaults to 'refs/heads/master'
    endpoint: hmcts


trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*
pr:
  - master

jobs:
- template: jobs/angularDotNetCore.yml@azureDevOpsTemplates # Template reference
  parameters:
    cleanCheckout: $(cleanCheckout)
    sonarCloudExtraProperties: $(sonarCloudPrepareExtraProperties)
    integrationTestsAppSettingsTransform: $(integrationTestsAppSettingsTransform)
    coverletCoverageExclusions: $(coverletCoverageExclusions)
    apiDirectory: $(apiDirectory)
    dalWorkingDirectory: $(dalWorkingDirectory)
    keyVaultName: $(keyVaultName)
    secretsFilter: $(secretsFilter)
    dotNetCoreVersion: '3.1.100'
