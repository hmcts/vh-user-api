name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger:
  - master

pr: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

parameters:
- name: environment
  type: object
  default:
  - Dev
  - Staging

pool: 
  vmImage: ubuntu-22.04

#####################################################
# Pre Run Tasks. ####################################
stages:
- stage: Pre_Run_Tasks
  displayName: Pre-Release Tasks
  variables:
  - template: variables/shared.yaml
  - template: variables/staging.yaml
  jobs:
  - job: package_nuget
    displayName: "Package Nuget Packages"
    steps:
      - template: templates\dotnet\package-nuget-packages.yml@azTemplates
        parameters:
          nugetProjectPath: '${{ variables.appName }}/${{ variables.nuget_package_name }}'
          vstsFeed: "${{ variables.nuget_org_name }}/${{ variables.nuget_feed_name }}"
          gitVersionConfigPath: ${{ variables.git_version_config_path }}

  - job: PublishAcceptanceTests
    dependsOn: package_nuget
    displayName: Publish Acceptance Tests
    variables:
      projectPath: "${{ variables.appName }}/${{ variables.appName }}"
    steps:
    - template: templates\dotnet\publish-acceptance-tests.yml@azTemplates
      parameters:
        netVersion: 6.x
        coreProjectPath: $(projectPath)
        nugetProjectPath: $(projectPath)
        nugetConfigPath: ${{ variables.appName }}
        useNugetConfig: true

#####################################################
# Build Docker Image & Push. ########################
- stage: Docker_Build_Push
  displayName: Docker Build & Push Image
  dependsOn: Pre_Run_Tasks
  variables:
    - template: variables/staging.yaml
    - template: variables/shared.yaml
  jobs:
  - job: Docker_Build
    displayName: "Docker Build and Push"
    steps:
    - checkout: self

    - bash: |
        sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.sds.config
      displayName: Add NuGet Feed Authentication
      workingDirectory: ${{ variables.appName }}
  
    - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
      
    - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
        imageName: "${{ variables.imageName }}"
        imageTags:
          - '${{ variables.stagingTagName }}'

#####################################################
# Deploy Nuget Packages. ############################
- stage: Push_Nuget
  displayName: Deploy Nuget Packages
  dependsOn: Pre_Run_Tasks
  variables:
  - template: variables/shared.yaml
    parameters:
      env: ${{ variables.env }}
  jobs: 
  - job: Publish_Nuget
    displayName: Publish NuGet Packages
    steps:
    - template: templates\dotnet\push-nuget-packages.yml@azTemplates
      parameters:
        vstsFeed: "${{ variables.nuget_org_name }}/${{ variables.nuget_feed_name }}"

#########################################
# Push Helm Charts to Repo. #############
- stage: Helm
  displayName: Push Helm Charts
  dependsOn: Docker_Build_Push
  variables:
  - template: variables/staging.yaml
  - template: variables/shared.yaml
  - group: vh-github-app-credentials
  jobs:
  - job: Helm
    displayName: "Helm Push"
    steps:
    - checkout: self

    - template: templates\Github\get-app-token.yaml@azTemplates
      parameters:
        privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
        appId: $(gh_app_app_id)

    - template: templates\Github\push-to-helm-chart-repo.yaml@azTemplates
      parameters:
        chartName: ${{ variables.chartName }}
        chartPath: ${{ variables.chartPath }}
        githubToken: $(githubappinstall.token)
        githubUsername: $(gh_app_name)
        githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"
        subDirectory: ${{ variables.subDirectory }}

#########################################
# Run Acceptance Tests on Staging. ######
- stage: Run_Acceptance_Tests
  displayName: "Run Acceptance Tests"
  dependsOn: 
  - Helm
  - Docker_Build_Push
  condition: succeeded('Helm')
  variables:
  - name: fullImageName
    value: $[ stageDependencies.Docker_Build_Push.Docker_Build.outputs['pushImage.fullImageName'] ]
  - template: variables/staging.yaml
  - template: variables/shared.yaml
    parameters:
      env: stg
  jobs:
  - job: CheckDeployment
    displayName: Check AKS Deployment
    steps:
    - template: templates\Containerisation\check-deployment.yaml@azTemplates
      parameters: 
        namespace: "vh"
        deploymentName: ${{ variables.chartName }}
        requiredImage: $(fullImageName)
        subscriptionName: "${{ variables.subscriptionName }}"
        env: ${{ variables.env }}
        retries: 20
        
  - job: AcceptanceTestsStaging
    pool: VH Self Hosted
    dependsOn: CheckDeployment
    displayName: Acceptance Tests Staging
    variables:
    - group: vh-user-api
    - group: vh-user-api-tests
    - group: vh-user-groups
    steps:
    - template: templates/dotnet/run-acceptance-tests.yml@azTemplates
      parameters:
        environment: ${{ variables.env }}
        azureSubscription: ${{ variables.subscriptionName }}
        acceptanceTestSettings:
        - name: VhServices:UserApiUrl
          value: "https://vh-user-api.staging.platform.hmcts.net"
        - name: ApplicationInsights:InstrumentationKey
          value: applicationinsights--instrumentationkey
          keyVaultName: vh-infra-core-${{ variables.env }}
          secret: true
        - name: AzureAd:ClientId
          value: azuread--clientid
          keyVaultName: vh-user-api-${{ variables.env }}
          secret: true
        - name: AzureAd:ClientSecret
          value: azuread--clientsecret
          keyVaultName: vh-user-api-${{ variables.env }}
          secret: true
        - name: AzureAd:TenantId
          value: azuread--tenantid
          keyVaultName: vh-infra-core-${{ variables.env }}
          secret: true
        - name: VhServices:UserApiResourceId
          value: azuread--identifieruri
          keyVaultName: vh-user-api-${{ variables.env }}
          secret: true
        - name: ConnectionStrings:RedisCache
          value: connectionstrings--rediscache
          keyVaultName: vh-infra-core-${{ variables.env }}
          secret: true
        - name: DefaultPassword
          value: $(defaultPassword)
        - name: Testing:ExistingGroups:0:Displayname
          value: $(testing-existinggroups-0-displayname)
        - name: Testing:ExistingGroups:0:GroupId
          value: $(testing-existinggroups-0-groupid)
        - name: Testing:ExistingGroups:1:Displayname
          value: $(testing-existinggroups-1-displayname)
        - name: Testing:ExistingGroups:1:GroupId
          value: $(testing-existinggroups-1-groupid)
        - name: Testing:ExistingUserDisplayname
          value: $(testing-existinguserdisplayname)
        - name: Testing:ExistingUserFirstname
          value: $(testing-existinguserfirstname)
        - name: Testing:ExistingUserId
          value: $(testing-existinguserid)
        - name: Testing:ExistingUserLastname
          value: $(testing-existinguserlastname)
        - name: Testing:ExistingUserPrincipal
          value: $(testing-existinguserprincipal)
        - name: Testing:ExistingEmail
          value: $(testing-existingemail)
        - name: Testing:NewGroups:0:Displayname
          value: $(testing-newgroup-0-displayname)
        - name: Testing:NewGroups:0:GroupId
          value: $(testing-newgroup-0-groupid)
        - name: ReformEmail
          value: $(reformemailAzureAd)
        - name: TestDefaultPassword
          value: $(testDefaultPassword)
        - name: AdGroup:CaseType
          value: $(adgroup-casetype)
        - name: AdGroup:Administrator
          value: $(adgroup-administrator)
        - name: AdGroup:Judge
          value: $(adgroup-judge)
        - name: AdGroup:StaffMember
          value: $(adgroup-staffmember)
        - name: AdGroup:ProfessionalUser
          value: $(adgroup-professionaluser)
        - name: AdGroup:JudgesTestGroup
          value: $(adgroup-judgestestgroup)
        - name: AdGroup:External
          value: $(adgroup-external)
        - name: AdGroup:JudicialOfficeHolder
          value: $(adgroup-judicialofficeholder)